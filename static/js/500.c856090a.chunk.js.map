{"version":3,"file":"static/js/500.c856090a.chunk.js","mappings":"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","sources":["api/fetch.js","components/FormSearch/FormSearch.jsx","components/FormSearch/PostSearch.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '861668370d618b6ce53a2f12a0dc8b5b';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\nexport const fetchMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const fetchMovieDitailed = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } }); //?query=${query}\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst FormSearch = () => {\n  const [state, setState] = useState('');\n  const [, setSearchParams] = useSearchParams();\n  const handleValue = ({ target: { value } }) => setState(value);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: state });\n    setState('');\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"username\" style={{ display: 'none' }}>\n          Username:\n        </label>\n        <input\n          id=\"username\"\n          type=\"text\"\n          placeholder=\"search\"\n          onChange={handleValue}\n          value={state}\n          aria-label=\"Search Input\"\n        />\n        <button type=\"submit\" aria-label=\"Submit Search\">\n          Search\n        </button>\n      </form>\n    </main>\n  );\n};\n\nexport default FormSearch;\n","import { useEffect, useState } from 'react';\nimport FormSearch from './FormSearch';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchMovieSearch } from '../../api/fetch';\n\nconst PostSearch = () => {\n  const [search, setSearch] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation()\n\n  useEffect(() => {\n    if (query === '') return;\n\n    const getFormSearch = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMovieSearch(query);\n        setSearch(results);\n      } catch (error) {\n        setError(error.message || 'An error occurred while fetching movies.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (query) getFormSearch();\n  }, [query]);\n\n  return (\n    <>\n      {isLoading && '...Loading'}\n      {error && `Error: ${error}`}\n      <FormSearch />\n      <ul>\n        {search.map(({ title, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{from:location}}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default PostSearch;\n","\nimport PostSearch from 'components/FormSearch/PostSearch';\n\nconst Movies = () => {\n  return <PostSearch />;\n};\n\nexport default Movies;\n"],"names":["instance","axios","baseURL","params","api_key","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","sent","abrupt","stop","apply","arguments","fetchMovieDitailed","_ref2","_callee2","id","_yield$instance$get2","_context2","concat","_x","fetchMovieSearch","_ref3","_callee3","query","_yield$instance$get3","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_yield$instance$get4","_context4","results","_x3","fetchMovieCast","_ref5","_callee5","_yield$instance$get5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","state","setState","_useSearchParams","useSearchParams","setSearchParams","_jsx","children","_jsxs","onSubmit","e","preventDefault","htmlFor","style","display","type","placeholder","onChange","value","target","search","setSearch","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","useEffect","getFormSearch","_yield$fetchMovieSear","t0","message","finish","_Fragment","FormSearch","map","title","Link","to","from","PostSearch"],"sourceRoot":""}