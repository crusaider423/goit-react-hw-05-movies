{"version":3,"file":"static/js/653.cabc1b87.chunk.js","mappings":"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","sources":["api/fetch.js","webpack://react-homework-template/./src/components/PostCast/post-cast.module.css?779c","components/PostCast/MarkupPostCast.jsx","components/PostCast/PostCast.jsx","pages/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '861668370d618b6ce53a2f12a0dc8b5b';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\nexport const fetchMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const fetchMovieDitailed = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } }); //?query=${query}\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post-cast_item__612Aq\"};","import css from './post-cast.module.css';\n\nconst MarkupPostCast = ({ cast }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <main>\n      <h4>Movie Cast</h4>\n      <ul>\n        {cast.map(({ id, name, character, profile_path }) => (\n          <li key={id} className={css.item}>\n            <img\n              src={\n                profile_path\n                  ? `http://image.tmdb.org/t/p/w500${profile_path}`\n                  : defaultImg\n              }\n              alt={name}\n              width={150}\n            />\n            <p>{name}</p>\n            <p>\n              <span style={{ fontWeight: '500' }}>Character</span>: {character}{' '}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\nexport default MarkupPostCast;\n","import { useEffect, useState } from 'react';\nimport { fetchMovieCast } from 'api/fetch';\nimport { useParams } from 'react-router-dom';\nimport MarkupPostCast from './MarkupPostCast';\n\nconst PostCast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && { error }}\n      <MarkupPostCast cast={cast} />\n    </>\n  );\n};\n\nexport default PostCast;\n\n// <h2>Movie Cast</h2>\n//         <ul>\n//           {Object.keys(cast).map(actorId => (\n//             <li key={actorId}>\n//               <div>{cast[actorId].name}</div>\n//               <div>{cast[actorId].character}</div>\n//             </li>\n//           ))}\n//         </ul>\n","import PostCast from '../../components/PostCast/PostCast';\n\nconst CastPage = () => {\n  return <PostCast />;\n};\nexport default CastPage;\n"],"names":["instance","axios","baseURL","params","api_key","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","sent","abrupt","stop","apply","arguments","fetchMovieDitailed","_ref2","_callee2","id","_yield$instance$get2","_context2","concat","_x","fetchMovieSearch","_ref3","_callee3","query","_yield$instance$get3","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_yield$instance$get4","_context4","results","_x3","fetchMovieCast","_ref5","_callee5","_yield$instance$get5","_context5","_x4","cast","_jsxs","children","_jsx","map","name","character","profile_path","className","css","src","alt","width","style","fontWeight","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","error","setError","movieId","useParams","useEffect","getMovieCast","_yield$fetchMovieCast","_cast","t0","_Fragment","MarkupPostCast","PostCast"],"sourceRoot":""}