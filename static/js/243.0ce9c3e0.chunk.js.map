{"version":3,"file":"static/js/243.0ce9c3e0.chunk.js","mappings":"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","sources":["api/fetch.js","components/PostReviews/PostReviews.jsx","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '861668370d618b6ce53a2f12a0dc8b5b';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\nexport const fetchMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const fetchMovieDitailed = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } }); //?query=${query}\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../api/fetch';\n\n\nconst PostReviews = () => {\n  const [review, setReview] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReview = async () => {\n      try {\n        const arr = await fetchMovieReviews(movieId);\n        setReview(arr);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getMovieReview();\n  }, [movieId]);\n  const isReview =\n    review.length === 0 ? (\n      <p>we don't have any reviews for this movie</p>\n    ) : null;\n  return (\n    <>\n      {error}\n\n      <main>\n        {isReview}\n        <ul>\n          {review.map(({ id, author, content }) => (\n            <li key={id}>\n              <p style={{ fontWeight: '500' }}>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </>\n  );\n};\n\nexport default PostReviews;\n","import PostReviews from 'components/PostReviews/PostReviews';\n\nconst ReviewsPage = () => {\n  return <PostReviews />;\n};\n\nexport default ReviewsPage;\n"],"names":["instance","axios","baseURL","params","api_key","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","sent","abrupt","stop","apply","arguments","fetchMovieDitailed","_ref2","_callee2","id","_yield$instance$get2","_context2","concat","_x","fetchMovieSearch","_ref3","_callee3","query","_yield$instance$get3","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_yield$instance$get4","_context4","results","_x3","fetchMovieCast","_ref5","_callee5","_yield$instance$get5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","review","setReview","_useState3","_useState4","error","setError","movieId","useParams","useEffect","getMovieReview","arr","t0","isReview","length","_jsx","children","_jsxs","_Fragment","map","author","content","style","fontWeight","PostReviews"],"sourceRoot":""}