{"version":3,"file":"static/js/980.9b1788c5.chunk.js","mappings":"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","sources":["api/fetch.js","webpack://react-homework-template/./src/components/PostDitailes/ditailes-post.module.css?6550","components/PostDitailes/MarkupDitailesPost.jsx","components/PostDitailes/DitailesPost.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '861668370d618b6ce53a2f12a0dc8b5b';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\nexport const fetchMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const fetchMovieDitailed = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const { data } = await instance.get(`/search/movie`, { params: { query } }); //?query=${query}\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cover\":\"ditailes-post_cover__iFKJm\",\"list\":\"ditailes-post_list__9SlRf\",\"genres\":\"ditailes-post_genres__syQgI\"};","import css from './ditailes-post.module.css';\n\nconst MarkupDitailesPost = ({\n  getGenres,\n  title,\n  vote_average,\n  year,\n  overview,\n  poster_path,\n  imagePath,\n  defaultImage,\n  navigate,\n  location,\n}) => {\n \n  const from = location.state?.from || '/';\n  return (\n    <main>\n      <button\n        onClick={() => {\n          navigate(from);\n        }}\n      >\n        Go back\n      </button>\n      <div className={css.cover}>\n        <img\n          src={poster_path ? imagePath : defaultImage}\n          alt={title}\n          width={250}\n        />\n        <ul className={css.list}>\n          <li>\n            <h3>{title && `${title}(${year})`}</h3>\n            <p>vote_average: {vote_average}</p>\n          </li>\n          <li>\n            <h4>Overview</h4> <p> {overview}</p>\n          </li>\n          <li>\n            <h4>Genres</h4>\n            <ul className={`${css.genres} `}>{getGenres}</ul>\n          </li>\n        </ul>\n      </div>\n    </main>\n  );\n};\n\nexport default MarkupDitailesPost;\n","import { useEffect, useState } from 'react';\nimport { fetchMovieDitailed } from 'api/fetch';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport MarkupDitailesPost from './MarkupDitailesPost';\n\nconst DitailesPost = () => {\n  const [movieDitailes, setMovieDitailes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [defaultImage, setDefaultImage] = useState('');\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    const getMovie = async () => {\n      if (!movieId) return;\n      try {\n        setIsLoading(true);\n        const results = await fetchMovieDitailed(movieId);\n        setMovieDitailes(results);\n        setDefaultImage(defaultImg);\n      } catch (error) {\n        setError(error.message || 'An error occurred while fetching movies.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n  const { genres, title, vote_average, release_date, poster_path, overview } =\n    movieDitailes;\n\n  const imagePath = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const year = new Date(release_date).getFullYear();\n\n  const getGenres =\n    genres &&\n    genres.map(({ id, name }) => (\n      <li key={id}>\n        <p>{name}</p>\n      </li>\n    ));\n\n  return (\n    <>\n      {isLoading && '...Loading'}\n      {error && error}\n\n      <MarkupDitailesPost\n        getGenres={getGenres}\n        title={title}\n        vote_average={vote_average}\n        year={year}\n        overview={overview}\n        poster_path={poster_path}\n        imagePath={imagePath}\n        defaultImage={defaultImage}\n        navigate={navigate}\n        location={location}\n      />\n    </>\n  );\n};\n\nexport default DitailesPost;\n","import DitailesPost from '../../components/PostDitailes/DitailesPost';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  return (\n    <>\n      <DitailesPost />\n      <main>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={{ from }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Outlet />{' '}\n      </main>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","params","api_key","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$instance$get","data","_context","prev","next","get","sent","abrupt","stop","apply","arguments","fetchMovieDitailed","_ref2","_callee2","id","_yield$instance$get2","_context2","concat","_x","fetchMovieSearch","_ref3","_callee3","query","_yield$instance$get3","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_yield$instance$get4","_context4","results","_x3","fetchMovieCast","_ref5","_callee5","_yield$instance$get5","_context5","_x4","_location$state","getGenres","title","vote_average","year","overview","poster_path","imagePath","defaultImage","navigate","from","location","state","_jsxs","children","_jsx","onClick","className","css","src","alt","width","_useState","useState","_useState2","_slicedToArray","movieDitailes","setMovieDitailes","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","setDefaultImage","movieId","useParams","useNavigate","useLocation","useEffect","getMovie","t0","message","finish","genres","release_date","Date","getFullYear","map","name","_Fragment","MarkupDitailesPost","DitailesPost","NavLink","to","Outlet"],"sourceRoot":""}